(()=>{eval("/* background.js\r\n *\r\n * This file has an example of how to make variables accessible to other scripts of the extension.\r\n *\r\n * It also shows how to handle short lived messages from other scripts, in this case, from in-content.js\r\n *\r\n * Note that not all extensions need of a background.js file, but extensions that need to persist data after a popup has closed may need of it.\r\n */\n\n// A sample object that will be exposed further down and used on popup.js\nlet user_signed_in = false;\nconst sampleBackgroundGlobal = {\n    message: 'This object comes from background.js'\n};\n\n// Listen to short lived messages from in-content.js\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    // Perform any ther actions depending on the message\n    console.log('background.js - received message from in-content.js:', message);\n    // Respond message\n    sendResponse(message);\n    if (request.message === 'is_user_signed_in') {\n        sendResponse({\n            message: 'success',\n            payload: user_signed_in\n        });\n    } else if (request.message === 'sign_out') {\n        user_signed_in = false;\n        sendResponse({ message: 'success' });\n    } else if (request.message === 'sign_in') {\n        user_signed_in = true;\n        sendResponse({ message: 'success' });\n    }\n\n    return true;\n});\n\n// Make variables accessible from chrome.extension.getBackgroundPage()\nwindow.sampleBackgroundGlobal = sampleBackgroundGlobal;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaHJvbWUtZXh0ZW5zaW9uLXRlbXBsYXRlLy4vc3JjL2pzL2JhY2tncm91bmQuanM/ODEwNCJdLCJuYW1lcyI6WyJ1c2VyX3NpZ25lZF9pbiIsInNhbXBsZUJhY2tncm91bmRHbG9iYWwiLCJtZXNzYWdlIiwiY2hyb21lIiwicnVudGltZSIsIm9uTWVzc2FnZSIsImFkZExpc3RlbmVyIiwic2VuZGVyIiwic2VuZFJlc3BvbnNlIiwiY29uc29sZSIsImxvZyIsInJlcXVlc3QiLCJwYXlsb2FkIiwid2luZG93Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0FBU0E7QUFDQSxJQUFJQSxpQkFBaUIsS0FBckI7QUFDQSxNQUFNQyx5QkFBeUI7QUFDM0JDLGFBQVM7QUFEa0IsQ0FBL0I7O0FBSUE7QUFDQUMsT0FBT0MsT0FBUCxDQUFlQyxTQUFmLENBQXlCQyxXQUF6QixDQUFxQyxDQUFDSixPQUFELEVBQVVLLE1BQVYsRUFBa0JDLFlBQWxCLEtBQW1DO0FBQ3BFO0FBQ0FDLFlBQVFDLEdBQVIsQ0FBWSxzREFBWixFQUFvRVIsT0FBcEU7QUFDQTtBQUNBTSxpQkFBYU4sT0FBYjtBQUNBLFFBQUlTLFFBQVFULE9BQVIsS0FBb0IsbUJBQXhCLEVBQTZDO0FBQ3pDTSxxQkFBYTtBQUNUTixxQkFBUyxTQURBO0FBRVRVLHFCQUFTWjtBQUZBLFNBQWI7QUFJSCxLQUxELE1BS08sSUFBSVcsUUFBUVQsT0FBUixLQUFvQixVQUF4QixFQUFvQztBQUN2Q0YseUJBQWlCLEtBQWpCO0FBQ0FRLHFCQUFhLEVBQUVOLFNBQVMsU0FBWCxFQUFiO0FBQ0gsS0FITSxNQUdBLElBQUlTLFFBQVFULE9BQVIsS0FBb0IsU0FBeEIsRUFBbUM7QUFDdENGLHlCQUFpQixJQUFqQjtBQUNBUSxxQkFBYSxFQUFFTixTQUFTLFNBQVgsRUFBYjtBQUNIOztBQUVELFdBQU8sSUFBUDtBQUNILENBbkJEOztBQXNCQTtBQUNBVyxPQUFPWixzQkFBUCxHQUFnQ0Esc0JBQWhDIiwiZmlsZSI6IjY0OTguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiLyogYmFja2dyb3VuZC5qc1xyXG4gKlxyXG4gKiBUaGlzIGZpbGUgaGFzIGFuIGV4YW1wbGUgb2YgaG93IHRvIG1ha2UgdmFyaWFibGVzIGFjY2Vzc2libGUgdG8gb3RoZXIgc2NyaXB0cyBvZiB0aGUgZXh0ZW5zaW9uLlxyXG4gKlxyXG4gKiBJdCBhbHNvIHNob3dzIGhvdyB0byBoYW5kbGUgc2hvcnQgbGl2ZWQgbWVzc2FnZXMgZnJvbSBvdGhlciBzY3JpcHRzLCBpbiB0aGlzIGNhc2UsIGZyb20gaW4tY29udGVudC5qc1xyXG4gKlxyXG4gKiBOb3RlIHRoYXQgbm90IGFsbCBleHRlbnNpb25zIG5lZWQgb2YgYSBiYWNrZ3JvdW5kLmpzIGZpbGUsIGJ1dCBleHRlbnNpb25zIHRoYXQgbmVlZCB0byBwZXJzaXN0IGRhdGEgYWZ0ZXIgYSBwb3B1cCBoYXMgY2xvc2VkIG1heSBuZWVkIG9mIGl0LlxyXG4gKi9cclxuXHJcbi8vIEEgc2FtcGxlIG9iamVjdCB0aGF0IHdpbGwgYmUgZXhwb3NlZCBmdXJ0aGVyIGRvd24gYW5kIHVzZWQgb24gcG9wdXAuanNcclxubGV0IHVzZXJfc2lnbmVkX2luID0gZmFsc2U7XHJcbmNvbnN0IHNhbXBsZUJhY2tncm91bmRHbG9iYWwgPSB7XHJcbiAgICBtZXNzYWdlOiAnVGhpcyBvYmplY3QgY29tZXMgZnJvbSBiYWNrZ3JvdW5kLmpzJ1xyXG59O1xyXG5cclxuLy8gTGlzdGVuIHRvIHNob3J0IGxpdmVkIG1lc3NhZ2VzIGZyb20gaW4tY29udGVudC5qc1xyXG5jaHJvbWUucnVudGltZS5vbk1lc3NhZ2UuYWRkTGlzdGVuZXIoKG1lc3NhZ2UsIHNlbmRlciwgc2VuZFJlc3BvbnNlKSA9PiB7XHJcbiAgICAvLyBQZXJmb3JtIGFueSB0aGVyIGFjdGlvbnMgZGVwZW5kaW5nIG9uIHRoZSBtZXNzYWdlXHJcbiAgICBjb25zb2xlLmxvZygnYmFja2dyb3VuZC5qcyAtIHJlY2VpdmVkIG1lc3NhZ2UgZnJvbSBpbi1jb250ZW50LmpzOicsIG1lc3NhZ2UpO1xyXG4gICAgLy8gUmVzcG9uZCBtZXNzYWdlXHJcbiAgICBzZW5kUmVzcG9uc2UobWVzc2FnZSk7XHJcbiAgICBpZiAocmVxdWVzdC5tZXNzYWdlID09PSAnaXNfdXNlcl9zaWduZWRfaW4nKSB7XHJcbiAgICAgICAgc2VuZFJlc3BvbnNlKHtcclxuICAgICAgICAgICAgbWVzc2FnZTogJ3N1Y2Nlc3MnLFxyXG4gICAgICAgICAgICBwYXlsb2FkOiB1c2VyX3NpZ25lZF9pblxyXG4gICAgICAgIH0pO1xyXG4gICAgfSBlbHNlIGlmIChyZXF1ZXN0Lm1lc3NhZ2UgPT09ICdzaWduX291dCcpIHtcclxuICAgICAgICB1c2VyX3NpZ25lZF9pbiA9IGZhbHNlO1xyXG4gICAgICAgIHNlbmRSZXNwb25zZSh7IG1lc3NhZ2U6ICdzdWNjZXNzJyB9KTtcclxuICAgIH0gZWxzZSBpZiAocmVxdWVzdC5tZXNzYWdlID09PSAnc2lnbl9pbicpIHtcclxuICAgICAgICB1c2VyX3NpZ25lZF9pbiA9IHRydWU7XHJcbiAgICAgICAgc2VuZFJlc3BvbnNlKHsgbWVzc2FnZTogJ3N1Y2Nlc3MnIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0cnVlO1xyXG59KTtcclxuXHJcblxyXG4vLyBNYWtlIHZhcmlhYmxlcyBhY2Nlc3NpYmxlIGZyb20gY2hyb21lLmV4dGVuc2lvbi5nZXRCYWNrZ3JvdW5kUGFnZSgpXHJcbndpbmRvdy5zYW1wbGVCYWNrZ3JvdW5kR2xvYmFsID0gc2FtcGxlQmFja2dyb3VuZEdsb2JhbDtcclxuIl19\n//# sourceURL=webpack-internal:///6498\n")})();